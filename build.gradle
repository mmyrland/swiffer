
buildscript {
    ext {
        springBootVersion = '1.3.7.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE")
        classpath('org.asciidoctor:asciidoctor-gradle-plugin:1.5.3')
    }
}

apply from: 'common.gradle'



ext { buildTime = new Date().format("yyyyMMddHHmm") }


repositories {
    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenLocal()
        mavenCentral()
    }

}


subprojects {
    // Include commonly used plugins
    apply plugin: 'groovy'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // Always generate a source jar
    task sourceJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allSource
        baseName = project.name
        classifier = 'sources'
    }


    jar {
        baseName = project.name
        version = '0.1.0'
    }

    // Add the sourceJars to non-extractor modules
    artifacts {
        archives sourceJar
    }

    dependencies {
        compile(
                'joda-time:joda-time',
                'com.fasterxml.jackson.core:jackson-annotations',
                'com.fasterxml.jackson.core:jackson-databind',
                'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.6.2',
                'org.apache.commons:commons-lang3:3.4',
                'org.apache.commons:commons-math3:3.6.1'
        )


        testCompile(
                'org.hamcrest:hamcrest-library:1.3',
                'junit:junit:4.12',
                'org.codehaus.groovy:groovy-all:2.4.4',
                'cglib:cglib:3.2.0',
                'org.spockframework:spock-spring:1.0-groovy-2.4',
        )

    }
}

project(':swiffer-service') {
    apply from: '../sourcesets.gradle'
    dependencies {
        compile project(":swiffer-api")
    }

}

project(':swiffer-api') {
    apply from: '../sourcesets.gradle'

}

